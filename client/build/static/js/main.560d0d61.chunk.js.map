{"version":3,"sources":["components/Grid/index.js","components/Jumbotron/index.js","pages/NoMatch.js","pages/About.js","pages/Contact.js","components/DeleteBtn/index.js","utils/API.js","redux/actionCreator.js","redux/actions.js","components/SaveCampGroundList/index.js","pages/Saved.js","components/SaveBtn/index.js","components/SearchCampGroundList/index.js","pages/Search.js","components/AppNavbar/index.js","utils/userAPI.js","components/RegisterModal/index.js","components/LoginModal/index.js","App.js","serviceWorker.js","redux/reducer.js","redux/store.js","index.js","utils/validationNameEmailPassword.js"],"names":["Container","_ref","fluid","children","react_default","a","createElement","className","concat","Row","_ref2","Col","_ref3","size","split","map","join","Jumbotron","style","height","color","backgroundColor","clear","paddingTop","textAlign","NoMatch","components_Jumbotron","role","aria-label","About","Contact","DeleteBtn","props","Object","assign","tabIndex","BASEURL","API","getCampGrounds","query","console","log","axios","get","getEntityId","getCampGround","campGroundData","deleteCampGround","id","delete","saveCampGround","post","login","user","type","logout","loginError","message","toggleNavbar","toggleLoginModal","toggleRegisterModal","savesCampGrounds","campGrounds","CampGroundList","ListItem","Card","CardImg","top","width","alt","campGround","src","imageURL","CardBody","CardTitle","build_default","rating","widgetRatedColors","widgetEmptyColors","widgetDimensions","typeOfWidget","widgetSpacings","Widget","CardSubtitle","fontWeight","city","state","distance","CardText","description","Button","target","rel","href","entityId","components_DeleteBtn","onClick","dispatch","then","res","catch","err","Saved","savedCampGrounds","_this","data","this","length","index","key","_id","username","Component","connect","SaveBtn","components_SaveBtn","Search","startDate","moment","format","endDate","add","availability","infoLink","revervationURL","zipCode","miles","result","isValidZipCode","campGroundSearch","results","handleInputChange","event","_event$target","name","value","setState","defineProperty","handleValidation","pattern","RegExp","test","rule","condition","autoComplete","onChange","SearchCampGroundList_CampGroundList","SearchCampGroundList_ListItem","entity_id","addresses","state_code","average_rating","preview_image_url","AppNavbar","register","Navbar","dark","expand","NavbarBrand","NavbarText","placeholder","NavbarToggler","Collapse","isOpen","isOpenNavbar","navbar","Nav","NavItem","NavLink","ButtonGroup","block","hidden","loggedIn","float","display","email","userAPI","loginAPI","password","response","token","error","registerAPI","date","statusMessage","finally","require","passwordValidation","emailValidation","nameValidation","RegisterModal","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","validName","validEmail","validPassword","preventDefault","handleNameChange","invalidName","invalidNameMessage","details","forceUpdate","handleEmailChange","invalidEmail","invalidEmailMessage","handlePasswordChange","invalidPassword","invalidPasswordMessage","handleCancel","wrapper","React","createRef","ref","Modal","isOpenRegisterModal","modalTransition","timeout","backdropTransition","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","for","sm","es_Col","Input","defaultValue","valid","invalid","FormText","ModalFooter","LoginModal","isOpenLoginModal","App","sessionStorage","BrowserRouter","components_AppNavbar","components_LoginModal","components_RegisterModal","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","initialState","getItem","isOpenExtraModal","createStore","arguments","undefined","action","newState","cloneDeep","setItem","errorMessage","splice","composeWithDevTools","ReactDOM","render","es","store","StrictMode","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","Joi","module","exports","object","string","min","required","trim","validate","minDomainSegments","tlds","allow"],"mappings":"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","file":"static/js/main.560d0d61.chunk.js","sourcesContent":["//@ts-check\n/**@module */\nimport React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n/**\n * This Container component allows us to use a bootstrap container without worrying about class names\n * @function Container\n * @param {*} fluid\n */\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n\n/**\n * This Row component lets us use a bootstrap row without having to think about class names\n * @function Container\n * @param {*} fluid\n*/\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n/**\n * This Col component lets us size bootstrap columns with less syntax\n * e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\n * @function Container\n * @param {*} fluid\n*/export function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","//@ts-check\n/**@module */\nimport React from \"react\";\n\n/**@function Jumbotron */\nfunction Jumbotron({ children }) {\n\treturn (\n\t\t<div\n\t\t\tstyle={{ height: 300, color:\"forestgreen\", backgroundColor:\"white\", clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n\t\t\tclassName=\"jumbotron\"\n\t\t>\n\t\t\t{children}\n\t\t</div>\n\t);\n}\n\nexport default Jumbotron;\n","//@ts-check\n/**@module */\nimport React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\n/**\n * if route/resource not found display this page\n * @function NoMatch\n */\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","//@ts-check\n/**@module */\nimport React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\n/**\n * if route/resource not found display this page\n * @function NoMatch\n */\nfunction About() {\n    return (\n        <Container fluid>\n            <Row>\n                <Col size=\"md-12\">\n                    <Jumbotron>\n                        <h1>Robert, please replace pages/About.js</h1>\n                        <h1>\n                            <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                                🙄\n              </span>\n                        </h1>\n                    </Jumbotron>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default About;\n","//@ts-check\n/**@module */\nimport React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\n/**\n * if route/resource not found display this page\n * @function NoMatch\n */\nfunction Contact() {\n    return (\n        <Container fluid>\n            <Row>\n                <Col size=\"md-12\">\n                    <Jumbotron>\n                        <h1>Robert, please replace pages/Contact.js</h1>\n                        <h1>\n                            <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                                🙄\n              </span>\n                        </h1>\n                    </Jumbotron>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Contact;\n","//@ts-check\n/**@module \n * @requires react\n*/\nimport React from \"react\";\nimport \"./style.css\";\n\n/**\n * The ...props means, spread all of the passed props onto this element \n * That way we don't have to define them all individually\n * @function DeleteBtn\n */\nfunction DeleteBtn(props) {\n  return (\n    <button className=\"delete-btn\" {...props} role=\"button\" tabIndex=\"0\">\n      Delete\n    </button>\n  );\n}\n\nexport default DeleteBtn;\n","//@ts-check\n/**@module */\nimport axios from \"axios\";\nconst BASEURL = \"https://www.recreation.gov/api/search?q=\";\n\nexport default {\n\n    /**\n   * Gets all books\n   * @function getCampGrounds \n   * @param {*} username\n   * */\n  getCampGrounds: function (query) {\n\n    // var url = \"https://www.recreation.gov/api/search?q=92103&exact=false&radius=300&size=20&fq=-entity_type%3Atour&fq=campGround_type_of_use%3AOvernight&fq=campGround_type_of_use%3Ana&fq=entity_type%3Acampground&fq=reservable%3A1&sort=available&start=0&start_date=2020-06-16T00%3A00%3A00Z&end_date=2020-06-20T00%3A00%3A00Z&include_unavailable=false?name=\" + user.username;\n    // if (user.username !== \"Guest...Login\") url = `/api/books/protected?name=${user.username}&email=${user.email}`; // used for protected routes in books.js\n    console.log(BASEURL + query)\n    return axios.get(BASEURL + query)\n  },\n  getEntityId: function (query) {\n\n    // var url = \"https://www.recreation.gov/api/search?q=92103&exact=false&radius=300&size=20&fq=-entity_type%3Atour&fq=campGround_type_of_use%3AOvernight&fq=campGround_type_of_use%3Ana&fq=entity_type%3Acampground&fq=reservable%3A1&sort=available&start=0&start_date=2020-06-16T00%3A00%3A00Z&end_date=2020-06-20T00%3A00%3A00Z&include_unavailable=false?name=\" + user.username;\n    // if (user.username !== \"Guest...Login\") url = `/api/books/protected?name=${user.username}&email=${user.email}`; // used for protected routes in books.js\n    console.log(BASEURL + query)\n    return axios.get(BASEURL + query)\n  },\n  // getCampGrounds: function (user) {\n  //   var url = \"https://www.recreation.gov/api/search?q=\" + user.username;\n\n  //   // var url = \"https://www.recreation.gov/api/search?q=92103&exact=false&radius=300&size=20&fq=-entity_type%3Atour&fq=campGround_type_of_use%3AOvernight&fq=campGround_type_of_use%3Ana&fq=entity_type%3Acampground&fq=reservable%3A1&sort=available&start=0&start_date=2020-06-16T00%3A00%3A00Z&end_date=2020-06-20T00%3A00%3A00Z&include_unavailable=false?name=\" + user.username;\n  //   // if (user.username !== \"Guest...Login\") url = `/api/books/protected?name=${user.username}&email=${user.email}`; // used for protected routes in books.js\n  //   var token = user.token;\n  //   return axios.get(url,\n  //     {\n  //       headers: { 'auth-token': token },       // send token thru, booksController middleware will verify before proceeding\n  //     });\n  // },\n\n  /**\n   * Gets the book with the given id\n   * @function getCampGround\n   * @param {*} id*/\n  getCampGround: function (campGroundData) {\n    return axios.get(\"/api/campgrounds\", campGroundData);\n  },\n\n  /**\n   * Deletes the book with the given id\n   * @function deleteCampGround\n   * @param {*} id \n   */\n  deleteCampGround: function (id) {\n    console.log(\"API deletecampground: \" , id);\n\n    return axios.delete(\"/api/campground/\"+ id);\n  },\n\n  /**\n   * Saves a book to the database\n   * @function saveCampGround\n   * @param {*} campGroundData \n   */\n  saveCampGround: function (campGroundData) {\n    console.log(\"API savecampground: \" , campGroundData);\n    return axios.post(\"/api/campgrounds\", campGroundData);\n  }\n};","import * as actions from './actions';\n\n\nexport const login = (user) => {\n    return {\n        type: actions.LOGIN_USER,\n        user\n    }\n}\n\nexport const logout = () => {\n    return {\n        type: actions.LOGOUT_USER\n    }\n}\n\nexport const register = (user) => {\n    return {\n        type: actions.REGISTER_USER,\n        user\n    }\n}\n\nexport const loginError = (message) => {\n    return {\n        type: actions.LOGIN_ERROR,\n        message\n    }\n}\n\nexport const toggleNavbar = () => {\n    return {\n        type: actions.TOGGLE_NAVBAR,\n    }\n}\n\nexport const toggleExtraModal = () => {\n    return {\n        type: actions.TOGGLE_EXTRAMODAL,\n    }\n}\n\nexport const toggleLoginModal = () => {\n    return {\n        type: actions.TOGGLE_LOGINMODAL,\n    }\n}\n\nexport const toggleRegisterModal = () => {\n    return {\n        type: actions.TOGGLE_REGISTERMODAL,\n    }\n}\n\n\nexport const savesCampGrounds = (campGrounds) => {\n    return {\n        type: actions.SAVES_CAMPGROUNDS,\n        campGrounds\n    }\n}\n\nexport const deleteCampGrounds = (index) => {\n    return {\n        type: actions.DELETES_CAMPGROUNDS,\n        index\n    }\n}","export const LOGIN_USER = 'LOGIN_USER';\nexport const REGISTER_USER = 'REGISTER_USER';\nexport const LOGOUT_USER = 'LOGOUT_USER';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const TOGGLE_NAVBAR = 'TOGGLE_NAVBAR';\nexport const TOGGLE_EXTRAMODAL = 'TOGGLE_EXTRAMODAL';\nexport const TOGGLE_LOGINMODAL = 'TOGGLE_LOGINMODAL';\nexport const TOGGLE_REGISTERMODAL = 'TOGGLE_REGISTERMODAL';\nexport const SAVES_CAMPGROUNDS = 'SAVES_CAMPGROUNDS'\nexport const DELETES_CAMPGROUNDS = 'DELETES_CAMPGROUNDS'","import React from \"react\";\n// import \"./style.css\";\nimport DeleteBtn from \"../DeleteBtn\"\nimport { Col, Row, Container } from \"../Grid\";\nimport API from \"../../utils/API\";\nimport { Button, Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from \"reactstrap\";\nimport Ratings from \"react-ratings-declarative\";\nimport { deleteCampGround } from '../../redux/actionCreator';\n\n\n\n\n// This file exports both the List and ListItem components\n\nexport function CampGroundList({ children }) {\n\n\treturn (\n\t\t<div className=\"list-overflow-container\">\n\t\t\t<ul className=\"list-group\">{children}</ul>\n\t\t</div>\n\t);\n}\nexport function ListItem(props) {\n\t\n\n    const deleteCampGround = (id) => {\n\t\tconst { dispatch } = props;\n        // const id = parseInt(event.target.id);\n\n\t\tAPI.deleteCampGround(id)\n\t\t.then(res => console.log(\"delete from mongo\", res)) \n\t\t// dispatch(deleteCampGround(id))\n\t \t  .catch(err => console.log(err));\n\t   }\n   \n  return (\n    <li>\n      \t<Container>\n      <Row className=\"mb-5\">\n\t\t\t\t\t<Col size=\"md-12\">\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<CardImg top width=\"100%\" alt={props.campGround} src={props.imageURL}></CardImg>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<CardTitle>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\t\t{props.campGround}\n\t\t\t\t\t\t\t\t\t\t<Ratings\n\t\t\t\t\t\t\t\t\t\t\trating={props.rating}\n\t\t\t\t\t\t\t\t\t\t\twidgetRatedColors=\"green\"\n\t\t\t\t\t\t\t\t\t\t\twidgetEmptyColors=\"grey\"\n\t\t\t\t\t\t\t\t\t\t\twidgetDimensions=\"20px\"\n\t\t\t\t\t\t\t\t\t\t\ttypeOfWidget=\"Point\"\n\t\t\t\t\t\t\t\t\t\t\twidgetSpacings=\"1px\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Ratings.Widget />\n\t\t\t\t\t\t\t\t\t\t\t<Ratings.Widget />\n\t\t\t\t\t\t\t\t\t\t\t<Ratings.Widget />\n\t\t\t\t\t\t\t\t\t\t\t<Ratings.Widget />\n\t\t\t\t\t\t\t\t\t\t\t<Ratings.Widget />\n\t\t\t\t\t\t\t\t\t\t</Ratings>\n\t\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t\t\t<CardSubtitle>\n\t\t\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t\t\t<span style={{ fontWeight: \"bold\" }}>\n\t\t\t\t\t\t\t\t\t\t\t{props.city}, {props.state}\n\t\t\t\t\t\t\t\t\t\t</span>{\" \"}\n\t\t\t\t\t\t\t\t\t\t({props.distance} miles away)\n\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t</CardSubtitle>\n                <CardText>{props.description}</CardText>\n                <Button>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\thref={\"https://www.recreation.gov/camping/campgrounds/\" + props.entityId}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\tINFO\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button>\n\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\thref={\n\t\t\t\t\t\t\t\t\t\"https://www.recreation.gov/camping/campgrounds/\" +\n\t\t\t\t\t\t\t\t\tprops.entityId +\n\t\t\t\t\t\t\t\t\t\"/availability\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\tRESERVE\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</Button>\n\t\t\t\t \n\t\t\t\t\t\t<DeleteBtn onClick={() => deleteCampGround(props.id)}>\n\t\t\t\t\t\t</DeleteBtn>\n\t\t\t\t\t\t{/* <DeleteBtn onClick={deleteCampGround}></DeleteBtn> */}\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</li>\n\t);\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport { CampGroundList, ListItem } from \"../components/SaveCampGroundList\";\nimport API from \"../utils/API\";\nimport { savesCampGrounds } from \"../redux/actionCreator\";\nimport { connect } from \"react-redux\";\n\nclass Saved extends Component {\n  state = {\n    savedCampGrounds: []\n  };\n\n  componentDidMount() {\n    this.getCampGround();\n  }\n\n  getCampGround = (campGroundData) => {\n    API.getCampGround(campGroundData)\n      .then(res => {\n        this.props.dispatch(savesCampGrounds(res.data))\n        // this.setState({ savedCampGrounds: res })\n      })\n      .catch((err => console.log(err)))\n  }\n  \n  \n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1>\n                <h1>Favorites</h1>\n              </h1>\n            </Jumbotron>\n            {(this.props.campGrounds && this.props.campGrounds.length > 0) ?\n              <CampGroundList>\n                 {this.props.campGrounds.map((campGround, index) => {\n                  return (<div key={index}>\n                    <ListItem\n                      key={campGround.id}\n                      id={campGround._id}\n                      username={campGround.username}\n                      entityId={campGround.entityId}\n                      campGround={campGround.campGround}\n                      city={campGround.city}\n                      state={campGround.state}\n                      distance={campGround.distance}\n                      rating={campGround.rating}\n                      description={campGround.description}\n                      imageURL={campGround.imageURL}\n                    />\n                  </div>\n                  )\n                })}\n              </CampGroundList>\n              :\n              <h2 style={{color:\"white\"}}>No camp grounds to display</h2>\n            }\n\n          </Col>\n\n        </Row>\n      </Container>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    campGrounds: state.campGrounds,\n    username: state.username\n  }\n}\nexport default connect(mapStateToProps) (Saved);\n","import React from \"react\";\nimport axios from \"axios\";\n\n// import \"./style.css\";\n\nexport function SaveBtn (props) {\n  \n  return (\n    <span style={{color:\"white\"}} className=\"save-btn\" {...props} role=\"button\" tabIndex=\"0\">\n      Save\n    </span>\n  );\n}\n\n\nexport default SaveBtn;","import React from \"react\";\n// import \"./style.css\";\nimport SaveBtn from \"../SaveBtn\"\nimport { Col, Row, Container } from \"../Grid\";\nimport API from \"../../utils/API\";\n// import { savesCampGrounds } from \"../redux/actionCreator\";\n// import { connect } from \"react-redux\";\nimport { Button, Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from \"reactstrap\";\nimport Ratings from \"react-ratings-declarative\";\n\n// This file exports both the List and ListItem components\n\nexport function CampGroundList({ children }) {\n\n\treturn (\n\t\t<div className=\"list-overflow-container\">\n\t\t\t<ul className=\"list-group\">{children}</ul>\n\t\t</div>\n\t);\n}\nexport function ListItem(props) {\n  const saveCampGround = (campGroundData) => {\n    API.saveCampGround(campGroundData)\n    \n      .then(res => console.log(\"save to mongo\", res))\n      \n      .catch(err => console.log(err));\n  }\n  return (\n    <li>\n      \t<Container>\n      <Row className=\"mb-5\">\n\t\t\t\t\t<Col size=\"md-12\">\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<CardImg top width=\"100%\" alt={props.campGround} src={props.imageURL}></CardImg>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<CardTitle>\n\t\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\t\t{props.campGround}\n\t\t\t\t\t\t\t\t\t\t<Ratings\n\t\t\t\t\t\t\t\t\t\t\trating={props.rating}\n\t\t\t\t\t\t\t\t\t\t\twidgetRatedColors=\"green\"\n\t\t\t\t\t\t\t\t\t\t\twidgetEmptyColors=\"grey\"\n\t\t\t\t\t\t\t\t\t\t\twidgetDimensions=\"20px\"\n\t\t\t\t\t\t\t\t\t\t\ttypeOfWidget=\"Point\"\n\t\t\t\t\t\t\t\t\t\t\twidgetSpacings=\"1px\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Ratings.Widget />\n\t\t\t\t\t\t\t\t\t\t\t<Ratings.Widget />\n\t\t\t\t\t\t\t\t\t\t\t<Ratings.Widget />\n\t\t\t\t\t\t\t\t\t\t\t<Ratings.Widget />\n\t\t\t\t\t\t\t\t\t\t\t<Ratings.Widget />\n\t\t\t\t\t\t\t\t\t\t</Ratings>\n\t\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t\t\t<CardSubtitle>\n\t\t\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t\t\t<span style={{ fontWeight: \"bold\" }}>\n\t\t\t\t\t\t\t\t\t\t\t{props.city}, {props.state}\n\t\t\t\t\t\t\t\t\t\t</span>{\" \"}\n\t\t\t\t\t\t\t\t\t\t({props.distance} miles away)\n\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t</CardSubtitle>\n                <CardText>{props.description}</CardText>\n                <Button>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\thref={\"https://www.recreation.gov/camping/campgrounds/\" + props.entityId}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\tINFO\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button>\n\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\thref={\n\t\t\t\t\t\t\t\t\t\"https://www.recreation.gov/camping/campgrounds/\" +\n\t\t\t\t\t\t\t\t\tprops.entityId +\n\t\t\t\t\t\t\t\t\t\"/availability\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\tRESERVE\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</Button>\n             \t\t\t<SaveBtn onClick={() => saveCampGround({id:props.id, \n                        username:props.username,\n                        entityId:props.entityId,\n                        campGround:props.campGround,\n                        city:props.city,\n                        state:props.state,\n                        distance:props.distance,\n                        rating:props.rating,\n                        description:props.description,\n                        imageURL:props.imageURL,\n                        })}></SaveBtn>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</li>\n\t);\n}\n","//@ts-check\n/**@module*/\nimport moment from \"moment\";\nimport { savesCampGrounds } from \"../redux/actionCreator\";\nimport { connect } from \"react-redux\";\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport SaveBtn from \"../components/SaveBtn\";\nimport API from \"../utils/API\";\n// import { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport {\n\tButton,\n\tForm,\n\tFormGroup,\n\tLabel,\n\tInput,\n\tCard,\n\tCardImg,\n\tCardText,\n\tCardBody,\n\tCardTitle,\n\tCardSubtitle,\n} from \"reactstrap\";\nimport { CampGroundList, ListItem } from \"../components/SearchCampGroundList\";\n\n// import { Input, TextArea, FormBtn } from \"../components/Form\";\n\nclass Search extends Component {\n\n  state = {\n    campGrounds: [],\n    entityId: \"\",\n    campGround: \"\",\n    city:\"\",              \n    state: \"\",\n    distance: \"\",\n    rating: \"\",\n    startDate:moment().format(\"YYYY-MM-DD\"),\n    endDate:moment(moment().format(\"YYYY-MM-DD\"), \"YYYY-MM-DD\").add(5, \"days\").format(\"YYYY-MM-DD\"),\n    description: \"\",\n    availability: \"\",\n    imageURL: \"\",\n    infoLink: \"\",\n    revervationURL: \"\",\n    zipCode: \"\",\n    miles: \"\",\n    query: \"\",\n    result: {},\n    isValidZipCode: false\n  };\n\n  // previousName = this.props.username;\n\n  /**\n   * Initial loadsearch and set previous state variable to track login username change\n  //  * @function componentDidMount */\n  // componentDidMount() {\n    // this.setDates();\n    \n    // this.state.startDate = moment().format(\"DD-MM-YYYY\")\n    // var end = moment(this.state.startDate, \"DD-MM-YYYY\").add(5, \"days\")\n    // this.state.endDate = end\n\n  //   this.previousName = this.props.username;\n  // }\n\n\t//   this.previousName = this.props.username;\n\t// }\n\n\t/**\n   * If there was a login then reload campGrounds with the newly logged in users choices\n  //  * @function componentDidUpdate */\n\n  // componentDidUpdate() {\n  //   if (this.previousName !== this.props.username) {  // if login or logout update campGrounds displayed\n  //     this.loadCampGrounds();\n  //     this.previousName = this.props.username;\n  //   }\n  // }\n  campGroundSearch = (query) => {\n    query = `${this.state.zipCode}&exact=false&radius=${this.state.miles}&size=20&fq=-entity_type%3Atour&fq=campsite_type_of_use%3AOvernight&fq=campsite_type_of_use%3Ana&fq=entity_type%3Acampground&fq=reservable%3A1&sort=available&start=0&start_date=${this.state.startDate}T00%3A00%3A00Z&end_date=${this.state.endDate}T00%3A00%3A00Z&include_unavailable=false?name=`\n    API.getCampGrounds(query).then(res => {\n      // this.setState({ result: res.data, campGrounds: res.data.results })\n      \n      this.props.dispatch(savesCampGrounds(res.data.results))\n      console.log(res.data.results)\n      \n      })\n          \n\n      .catch(err => console.log(err));\n\n  }\n\n\n  handleValidation(pattern, value) {\n\n    if (!pattern) return true;\n    // string pattern, one validation rule\n    if (typeof pattern === 'string') {\n      console.log(pattern)\n\n      const condition = new RegExp(pattern, 'g');\n      return condition.test(value);\n    }\n    // array patterns, multiple validation rules\n    if (typeof pattern === 'object') {\n      const conditions = pattern.map(rule => new RegExp(rule, 'g'));\n      return conditions.map(condition => condition.test(value));\n    }\n  }\n  /**\n   * handle changes in input field\n   * @function handleInputChange */\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n    if (this.handleValidation(\"^\\\\d{5}\", value)) {\n      this.setState({\n        isValidZipCode: true\n      })\n    }\n  };\n\n\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\" >\n            <div>\n              <Jumbotron>\n                <h1>Camp ground Search</h1>\n                <h1>Search for and save your favorite camp grounds</h1>\n              </Jumbotron>\n              <h1 style={{ color: \"white\" }}>Find camping spots within <input className=\"form-control form-control-lg\" autoComplete=\"off\" type=\"text\" name=\"miles\" onChange={this.handleInputChange} value={this.state.miles} /> miles of zip code</h1>\n              <input className=\"form-control form-control-lg\" autoComplete=\"off\" type=\"text\" name=\"zipCode\" onChange={this.handleInputChange} value={this.state.zipCode} />\n              <button type=\"submit\" onClick={this.campGroundSearch} >\n                Search\n      </button>\n              {console.log(this.handleValidation(`^\\\\d`, this.state.zipCode))}\n\n              {(this.state.isValidZipCode && this.props.campGrounds && this.props.campGrounds.length > 0) ?\n                <CampGroundList>\n                  {this.props.campGrounds.map((campGround, index) => {\n                    return (\n                      <div key={index}>\n                        <ListItem\n                          key={campGround._id}\n                          entityId={campGround.entity_id}\n                          campGround={campGround.name}\n                          city={campGround.addresses[0].city}\n                          state={campGround.addresses[0].state_code}\n                          distance={campGround.distance}\n                          rating={campGround.average_rating}\n                          description={campGround.description}\n                          imageURL={campGround.preview_image_url}\n                        />\n                      </div>\n                    )\n                  })}\n                </CampGroundList>\n                :\n                <h2>No camp grounds to display</h2>\n              }\n            </div>\n          </Col>\n\n        </Row>\n      </Container>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    campGrounds: state.campGrounds,\n    username: state.username\n  }\n}\nexport default connect(mapStateToProps) (Search);\n","//@ts-check\n/**@module \n * @requires react\n * @requires reactstrap\n*/\nimport React, { Component } from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    NavbarText,\n    Nav,\n    NavItem,\n    NavLink,\n    Button,\n    ButtonGroup\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport {\n    toggleNavbar,\n    logout,\n    toggleLoginModal,\n    toggleRegisterModal\n} from '../../redux/actionCreator';\nimport \"./style.css\";\n\n\n\nclass AppNavbar extends Component {\n\n    /**\n     * Send back toggle signal to App.js, to open/close navbar\n     * @function toggle\n     */\n    toggleNavbar = () => this.props.dispatch(toggleNavbar());\n\n    /**\n     * Onclick request to register\n     * @function register\n     */\n    register = () => this.props.dispatch(toggleRegisterModal());\n\n    /**\n     * Onclick request to login\n     * @function login\n     */\n    login = () => this.props.dispatch(toggleLoginModal());\n\n    /**\n     * Onclick request to logout\n     * @function logout\n     */\n    logout = () => this.props.dispatch(logout());\n\n    render() {\n        return (\n            // <div> //removed to get sticky navbar with reactstrap https://github.com/reactstrap/reactstrap/issues/1179\n            <Navbar dark expand=\"md\" className=\"mb-5 sticky-top nav-bar\">\n                <NavbarBrand className=\"text-light mx-3 pt-3\" href=\"/\">CAMPsite</NavbarBrand>\n                <NavbarText className=\"text-light\" placeholder=\"test\"><small>{this.props.username}</small></ NavbarText>\n\n                <NavbarToggler onClick={this.toggleNavbar}><img src='./hamburger.jpg' alt='Menu' style={{\n                    height: \"40px\",\n                    width: \"40px\"\n                }}></img></NavbarToggler>\n                <Collapse isOpen={this.props.isOpenNavbar} navbar>\n                    <Nav className=\"ml-auto text-light\" navbar>\n\n\n                        <NavItem>\n                            <NavLink className=\"mx-2 pt-3 hover-underline\" href=\"/about\">About</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className=\"mx-2 pt-3 hover-underline\" href=\"/search\">Search</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className=\"mx-2 pt-3 hover-underline\" href=\"/saved\">Favorties</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className=\"mx-2 pt-3 hover-underline\" href=\"/contact\">Contact</NavLink>\n                        </NavItem>\n\n                        <ButtonGroup block size=\"lg\">\n                            <Button className=\"authentication-buttons mx-2\" color=\"outline-light\" hidden={this.props.loggedIn === \"true\" ? true : false} float=\"left\" display=\"inline\" onClick={this.register}>Register</Button>\n                            <Button className=\"authentication-buttons mx-2\" color=\"outline-light\" hidden={this.props.loggedIn === \"true\" ? true : false} float=\"left\" display=\"inline\" onClick={this.login}>Login</Button>\n                            <Button className=\"authentication-buttons mx-2\" color=\"outline-light\" hidden={this.props.loggedIn === \"true\" ? false : true} float=\"left\" display=\"inline\" onClick={this.logout}>Logout</Button>\n                        </ButtonGroup>\n                    </Nav>\n                </Collapse>\n            </Navbar>\n            // </div >  //removed to get sticky navbar with reactstrap https://github.com/reactstrap/reactstrap/issues/1179\n        );\n    }\n\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        username: state.username,\n        email: state.email,\n        loggedIn: state.loggedIn,\n        isOpenNavbar: state.isOpenNavbar\n    }\n}\n\nexport default connect(mapStateToProps)(AppNavbar);\n// export default AppNavbar;","import axios from \"axios\";\nimport { login, loginError, toggleRegisterModal, toggleLoginModal } from '../redux/actionCreator';\n\n\n/** \n* this is object with registration data\n* @typedef {object} data\n* @property {string} [name] - 8+ digit user name regex alpha-numeric only use name on register\n* @property {string} email - email format string\n* @property {string} password - minimum 8 digit password regex alpha-numeric\n* \n*/\n\nexport default {\n    /**\n     * Called from LoginModal component then App.js handleLogin \n     * @function handleLogin\n     * @param {data} data\n     */\n    loginAPI: function (data, dispatch) {\n        console.log(\"userAPI.Login(data): \", data);\n        axios\n            .post(\n                '/api/users/login',\n                {\n                    email: data.email,\n                    password: data.password\n                })\n            .then(response => {\n                console.log(`login user: ${response.data.user.name}`);\n                dispatch(login({\n                    token: response.data.token,\n                    email: response.data.user.email,\n                    username: response.data.user.name,\n                    loggedIn: \"true\"\n                }));\n                dispatch(toggleLoginModal());\n            })\n            .catch(error => {\n                console.log(\"Error, could not login from App.js: \", error);\n                dispatch(loginError(error));\n                // this.props.dispatch(loginError(error.response.data.statusMessage));\n                dispatch(toggleLoginModal());\n\n            });\n    },\n\n    /**\n     * called from RegisterModal component to handle registration and then login request attribute changes\n     * @function handleRegister\n     * @param {data} data \n     * */\n    registerAPI: function (data, dispatch) {\n        // first register, then login\n        axios\n            .post(\n                '/api/users/register',        // first register\n                {\n                    name: data.name,\n                    email: data.email,\n                    password: data.password\n                })\n            .then(response => {\n                console.log(`register user: ${response.data.name} ${response.data.date}`);\n                axios\n                    .post(\n                        '/api/users/login',       // then login\n                        {\n                            email: data.email,\n                            password: data.password\n                        })\n                    .then(response => {\n                        console.log(`login user: ${response.data.user.name}`);\n                        dispatch(login({\n                            token: response.data.token,\n                            email: response.data.user.email,\n                            username: response.data.user.name,\n                            loggedIn: \"true\"\n                        }));\n                        // this.props.dispatch(toggleLoginModal());\n                    }).catch(error => {\n                        console.log(\"Could not login after register\")\n                        dispatch(loginError(error.response.data.statusMessage));\n                    });\n            })\n            .catch(error => {\n                console.log(\" Could not register from App.js: \" + error.message);\n            })\n            .finally(() => {\n                dispatch(toggleRegisterModal());\n            })\n            ;\n    }\n\n\n}\n\n\n","//@ts-check\n/**@module \n * @requires react\n*/\nimport React, { Component } from 'react';\nimport {\n    Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormText,\n    Col,\n    Modal, ModalHeader, ModalBody, ModalFooter\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { toggleRegisterModal } from '../../redux/actionCreator';\nimport API from '../../utils/userAPI';\n\n\n\nconst { passwordValidation, emailValidation, nameValidation } = require('../../utils/validationNameEmailPassword');\n\n\nclass RegisterModal extends Component {\n    constructor(props) {\n        super(props);\n        this.validEmail = false;\n        this.invalidEmail = false;\n        this.validName = false;\n        this.invalidName = false;\n        this.validPassword = false;\n        this.invalidPassword = false;\n        this.invalidEmailMessage = \"\";\n        this.invalidNameMessage = \"\";\n        this.invalidPasswordMessage = \"\";\n        this.login = false;\n        this.wrapper = React.createRef();\n    }\n\n\n\n    componentDidMount() {\n    }\n\n\n    /**\n     * @function handleSubmit\n     * @param {*} event\n     */\n    handleSubmit = (event) => {\n        // console.log(\"App.js handleSubmit logging in with: \", event.target.email.value);\n        const data = {\n            name: event.target.name.value,\n            email: event.target.email.value,\n            password: event.target.password.value\n        }\n        if (this.validName && this.validEmail && this.validPassword) {\n            API.registerAPI(data, this.props.dispatch);\n            this.validName = false;\n            this.validEmail = false;\n            this.validPassword = false;\n            event.preventDefault();         // TODO register modal stays open with this\n        }\n        else event.preventDefault();\n    }\n\n\n    /**\n     * Handle changes in name field on login/register form\n     * @function handleNameChange\n     * @param {*} event\n     */\n    handleNameChange = (event) => {\n        const data = {\n            name: event.target.value\n        }\n        const { error } = nameValidation(data);\n        if (error) {\n            this.validName = false;\n            this.invalidName = true;\n            this.invalidNameMessage = error.details[0].message;\n            this.forceUpdate();\n            //console.log(\"NameInput: \" + event.target.value + \"validation error: \" + error.details[0].message);\n            return;\n        }\n        if (event.target.value) {\n            //console.log(\"NameInput: \" + event.target.value);\n            this.validName = true;\n            this.invalidName = false;\n            this.invalidNameMessage = \"\";\n            this.forceUpdate();\n        }\n    }\n\n\n    /**\n     * handle each character input in email field\n     * @function handleEmailChange\n     * @param {*} event\n     */\n    handleEmailChange = (event) => {\n        const data = {\n            email: event.target.value\n        }\n        const { error } = emailValidation(data);\n        if (error) {\n            this.validEmail = false;\n            this.invalidEmail = true;\n            this.invalidEmailMessage = error.details[0].message;\n            this.forceUpdate();\n            //console.log(\"emailInput: \" + event.target.value + \"validation error: \" + error.details[0].message);\n            return;\n        }\n        if (event.target.value) {\n            //console.log(\"emailInput: \" + event.target.value);\n            this.validEmail = true;\n            this.invalidEmail = false;\n            this.invalidEmailMessage = \"\";\n            this.forceUpdate();\n        }\n    }\n\n\n\n    /**\n     * handle each character input in password field\n     * @function handlePasswordChange\n     * @param {*} event\n     */\n    handlePasswordChange = (event) => {\n        const data = {\n            password: event.target.value\n        }\n        const { error } = passwordValidation(data);\n        if (error) {\n            this.validPassword = false;\n            this.invalidPassword = true;\n            this.invalidPasswordMessage = error.details[0].message;\n            this.forceUpdate();\n            //console.log(\"PasswordInput: \" + event.target.value + \"validation error: \" + error.details[0].message);\n            return;\n        }\n        if (event.target.value) {\n            //console.log(\"PasswordInput: \" + event.target.value);\n            this.validPassword = true;\n            this.invalidPassword = false;\n            this.invalidPasswordMessage = \"\";\n            this.forceUpdate();\n\n        }\n    }\n\n    /**\n     * handle cancel onclick event\n    * @function handleCancel\n    */\n    handleCancel = () => {\n        this.validEmail = false;\n        this.invalidEmail = false;\n        this.validName = false;\n        this.invalidName = false;\n        this.validPassword = false;\n        this.invalidPassword = false;\n        this.invalidEmailMessage = \"\";\n        this.invalidNameMessage = \"\";\n        this.invalidPasswordMessage = \"\";\n        this.props.dispatch(toggleRegisterModal());\n    }\n\n    render() {\n        return (\n            <div ref={this.wrapper}>\n                <Modal isOpen={this.props.isOpenRegisterModal} modalTransition={{ timeout: 700 }} backdropTransition={{ timeout: 1300 }}  >\n                    <ModalHeader>Register</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleSubmit}>\n                            <FormGroup >\n                                <Label for=\"nameInput\" sm={20}>Name:</Label>\n                                <Col sm={100}>\n                                    <Input\n                                        type=\"search\"\n                                        id=\"nameInput\"\n                                        defaultValue=\"\"\n                                        name=\"name\"\n                                        onChange={this.handleNameChange}\n                                        placeholder=\"8 characters minumum\"\n                                        valid={this.validName ? true : false}\n                                        invalid={this.invalidName ? true : false}>\n                                    </Input>\n                                    <FormText>{this.invalidNameMessage}</FormText>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"emailInput\" sm={20}>Email (Login ID):</Label>\n                                <Col sm={100}>\n                                    <Input\n                                        type=\"email\"\n                                        id=\"emailInput\"\n                                        defaultValue=\"\"\n                                        name=\"email\"\n                                        onChange={this.handleEmailChange}\n                                        placeholder=\"8 characters minumum\"\n                                        valid={this.validEmail ? true : false}\n                                        invalid={this.invalidEmail ? true : false} >\n                                    </Input>\n                                    <FormText>{this.invalidEmailMessage}</FormText>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"passwordInput\" sm={20}>Password: </Label>\n                                <Col sm={100}>\n                                    <Input\n                                        type=\"password\"\n                                        id=\"passwordInput\"\n                                        defaultValue=\"\"\n                                        name=\"password\"\n                                        onChange={this.handlePasswordChange}\n                                        placeholder=\"8 characters minumum\"\n                                        valid={this.validPassword ? true : false}\n                                        invalid={this.invalidPassword ? true : false} />\n                                    <FormText>{this.invalidPasswordMessage}</FormText>\n                                </Col>\n                            </FormGroup>\n                            <Button color=\"primary\" type=\"submit\" >Register</Button>{' '}\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"secondary\" onClick={this.handleCancel}>Cancel</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        username: state.username,\n        email: state.email,\n        loggedIn: state.loggedIn,\n        isOpenRegisterModal: state.isOpenRegisterModal\n    }\n}\n\nexport default connect(mapStateToProps)(RegisterModal);","//@ts-check\n/**@module \n * @requires react\n*/\nimport React, { Component } from 'react';\nimport {\n    Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormText,\n    Col,\n    Modal, ModalHeader, ModalBody, ModalFooter\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { toggleLoginModal } from '../../redux/actionCreator';\nimport API from '../../utils/userAPI';\n\n\n\nconst { passwordValidation, emailValidation, nameValidation } = require('../../utils/validationNameEmailPassword');\n\n\nclass LoginModal extends Component {\n    constructor(props) {\n        super(props);\n        this.validEmail = false;\n        this.invalidEmail = false;\n        this.validName = false;\n        this.invalidName = false;\n        this.validPassword = false;\n        this.invalidPassword = false;\n        this.invalidEmailMessage = \"\";\n        this.invalidNameMessage = \"\";\n        this.invalidPasswordMessage = \"\";\n        this.login = false;\n        this.wrapper = React.createRef();\n    }\n\n\n    /**\n     * handle cancel onclick event\n    * @function handleCancel\n    */\n    handleCancel = () => {\n        this.validEmail = false;\n        this.invalidEmail = false;\n        this.validName = false;\n        this.invalidName = false;\n        this.validPassword = false;\n        this.invalidPassword = false;\n        this.invalidEmailMessage = \"\";\n        this.invalidNameMessage = \"\";\n        this.invalidPasswordMessage = \"\";\n        this.props.dispatch(toggleLoginModal());\n    }\n\n\n    componentDidMount() {\n    }\n\n\n    /**\n     * @function handleSubmit\n     * @param {*} event\n     */\n    handleSubmit = (event) => {\n        // console.log(\"App.js handleSubmit logging in with: \", event.target.email.value);\n        const data = {\n            // name: event.target.name.value,\n            email: event.target.email.value,\n            password: event.target.password.value\n        }\n\n        if (this.validEmail && this.validPassword) {\n            // console.log(\"handleSubmit Login with email: \" + event.target.email.value + \"password: \" + event.target.password.value);\n            API.loginAPI(data, this.props.dispatch);\n            this.validEmail = false;\n            this.validPassword = false;\n            event.preventDefault();\n        }\n        else event.preventDefault();\n    }\n\n\n    /**\n     * Handle changes in name field on login/register form\n     * @function handleNameChange\n     * @param {*} event\n     */\n    handleNameChange = (event) => {\n        const data = {\n            name: event.target.value\n        }\n        const { error } = nameValidation(data);\n        if (error) {\n            this.validName = false;\n            this.invalidName = true;\n            this.invalidNameMessage = error.details[0].message;\n            this.forceUpdate();\n            //console.log(\"NameInput: \" + event.target.value + \"validation error: \" + error.details[0].message);\n            return;\n        }\n        if (event.target.value) {\n            //console.log(\"NameInput: \" + event.target.value);\n            this.validName = true;\n            this.invalidName = false;\n            this.invalidNameMessage = \"\";\n            this.forceUpdate();\n        }\n    }\n\n\n    /**\n     * handle each character input in email field\n     * @function handleEmailChange\n     * @param {*} event\n     */\n    handleEmailChange = (event) => {\n        const data = {\n            email: event.target.value\n        }\n        const { error } = emailValidation(data);\n        if (error) {\n            this.validEmail = false;\n            this.invalidEmail = true;\n            this.invalidEmailMessage = error.details[0].message;\n            this.forceUpdate();\n            //console.log(\"emailInput: \" + event.target.value + \"validation error: \" + error.details[0].message);\n            return;\n        }\n        if (event.target.value) {\n            //console.log(\"emailInput: \" + event.target.value);\n            this.validEmail = true;\n            this.invalidEmail = false;\n            this.invalidEmailMessage = \"\";\n            this.forceUpdate();\n        }\n    }\n\n\n\n    /**\n     * handle each character input in password field\n     * @function handlePasswordChange\n     * @param {*} event\n     */\n    handlePasswordChange = (event) => {\n        const data = {\n            password: event.target.value\n        }\n        const { error } = passwordValidation(data);\n        if (error) {\n            this.validPassword = false;\n            this.invalidPassword = true;\n            this.invalidPasswordMessage = error.details[0].message;\n            this.forceUpdate();\n            //console.log(\"PasswordInput: \" + event.target.value + \"validation error: \" + error.details[0].message);\n            return;\n        }\n        if (event.target.value) {\n            //console.log(\"PasswordInput: \" + event.target.value);\n            this.validPassword = true;\n            this.invalidPassword = false;\n            this.invalidPasswordMessage = \"\";\n            this.forceUpdate();\n\n        }\n    }\n\n\n    render() {\n        return (\n            <div ref={this.wrapper}>\n                <Modal isOpen={this.props.isOpenLoginModal} modalTransition={{ timeout: 700 }} backdropTransition={{ timeout: 1300 }} >\n                    <ModalHeader>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleSubmit}>\n                            <FormGroup>\n                                <Label for=\"emailInput\" sm={20}>Email (Login ID):</Label>\n                                <Col sm={100}>\n                                    <Input\n                                        type=\"email\"\n                                        id=\"emailInput\"\n                                        defaultValue=\"\"\n                                        name=\"email\"\n                                        onChange={this.handleEmailChange}\n                                        placeholder=\"8 characters minumum\"\n                                        valid={this.validEmail ? true : false}\n                                        invalid={this.invalidEmail ? true : false} >\n                                    </Input>\n                                    <FormText>{this.invalidEmailMessage}</FormText>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"passwordInput\" sm={20}>Password: </Label>\n                                <Col sm={100}>\n                                    <Input\n                                        type=\"password\"\n                                        id=\"passwordInput\"\n                                        defaultValue=\"\"\n                                        name=\"password\"\n                                        onChange={this.handlePasswordChange}\n                                        placeholder=\"8 characters minumum\"\n                                        valid={this.validPassword ? true : false}\n                                        invalid={this.invalidPassword ? true : false} />\n                                    <FormText>{this.invalidPasswordMessage}</FormText>\n                                </Col>\n                            </FormGroup>\n                            <Button color=\"primary\" type=\"submit\" >{this.props.isOpenLoginModal ? \"Login\" : \"Register\"}</Button>{' '}\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"secondary\" onClick={this.handleCancel}>Cancel</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        username: state.username,\n        email: state.email,\n        loggedIn: state.loggedIn,\n        isOpenLoginModal: state.isOpenLoginModal\n    }\n}\n\nexport default connect(mapStateToProps)(LoginModal);","//@ts-check\n/**@module \n * @requires react\n * @requires react-router-dom\n * @requires module:/src/pages/Books\n * @requires module:/src/pages/Detail\n * @requires module:/src/pages/NoMatch\n * @requires bootstrap\n * @requires axios\n * @requires module:/src/components/AppNavbar\n * @requires module:/src/components/LoginRegisterModals\n * @requires module:/src/components/ExtraModal\n*/\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport NoMatch from \"./pages/NoMatch\";\nimport About from \"./pages/About\";\nimport Contact from \"./pages/Contact\";\nimport Saved from \"./pages/Saved\";\nimport Search from \"./pages/Search\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport AppNavbar from './components/AppNavbar';\nimport RegisterModal from './components/RegisterModal';\nimport LoginModal from './components/LoginModal';\nimport { connect } from 'react-redux';\nimport { logout } from './redux/actionCreator';\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.wrapper = React.createRef();   //Facebook workaround\n\n  }\n\n\n  // LIFECYCLE METHODS and related support functions\n\n  componentDidMount() {\n    if (!sessionStorage[\"name\"]) {\n      this.props.dispatch(logout());    // on load, reset all user settings, only when not already set\n    } else console.log(\"sessionStorage.name already exists\");\n  }\n\n\n  render() {\n    return (\n      <Router>\n        <div ref={this.wrapper}>\n          <AppNavbar />\n          <LoginModal />\n          <RegisterModal />\n          <Switch>\n            <Route exact path=\"/\" component={Search} />\n            <Route exact path=\"/search\" component={Search} />\n            <Route exact path=\"/saved\" component={Saved} />\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/contact\" component={Contact} />\n            <Route component={NoMatch} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    username: state.username,\n    email: state.email,\n    token: state.token,\n    loggedIn: state.loggedIn\n  }\n}\n\nexport default connect(mapStateToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actions from './actions';\nimport { cloneDeep } from 'lodash';\n\nconst initialState = {\n    username: sessionStorage.getItem(\"name\"),\n    email: sessionStorage.getItem(\"email\"),\n    token: sessionStorage.getItem(\"token\"),\n    loggedIn: sessionStorage.getItem(\"loggedIn\"),\n    isOpenNavbar: false,\n    isOpenExtraModal: false,\n    isOpenLoginModal: false,\n    isOpenRegisterModal: false,\n    campGrounds: []\n}\n\n\nexport const todoReducer = (state = initialState, action) => {\n    const newState = cloneDeep(state);\n    switch (action.type) {\n\n        case actions.LOGIN_USER:\n            newState.username = action.user.username;\n            newState.email = action.user.email;\n            newState.token = action.user.token;\n            newState.loggedIn = \"true\";\n            sessionStorage.setItem(\"token\", newState.token);\n            sessionStorage.setItem(\"email\", newState.email);\n            sessionStorage.setItem(\"name\", newState.username);\n            sessionStorage.setItem(\"loggedIn\", newState.loggedIn);\n            newState.errorMessage = null;\n            console.log(\"LOGIN_USER: \", newState.username);\n            return newState;\n\n        case actions.REGISTER_USER:\n            newState.username = \"Registered...OK\";\n            newState.email = \"\";\n            newState.loggedIn = \"true\";\n            console.log(\"REGISTER_USER: \", newState.username);\n            return newState;\n\n        case actions.LOGIN_ERROR:\n            newState.username = \"wrong email or pswd\";\n            newState.email = \"\";\n            newState.token = \"\";\n            newState.loggedIn = \"false\";\n            newState.errorMessage = action.message;\n            console.log(\"LOGIN_ERROR: \", newState.errorMessage);\n            return newState;\n\n        case actions.LOGOUT_USER:\n            newState.username = \"Guest...Login\";\n            newState.email = \"\";\n            newState.token = \"\";\n            newState.loggedIn = \"false\";\n            sessionStorage.setItem(\"name\", newState.username);\n            sessionStorage.setItem(\"email\", newState.email);\n            sessionStorage.setItem(\"token\", newState.token);\n            sessionStorage.setItem(\"loggedIn\", \"false\");\n            console.log(\"LOGOUT_USER: \", newState.username);\n            return newState;\n\n        case actions.TOGGLE_NAVBAR:\n            newState.isOpenNavbar = !state.isOpenNavbar;\n            // console.log(\"new TOGGLE_NAVBAR state.isOpenNavbar: \", newState.isOpenNavbar)\n            return newState;\n\n        case actions.TOGGLE_EXTRAMODAL:\n            newState.isOpenExtraModal = !state.isOpenExtraModal;\n            // console.log(\"new TOGGLE_EXTRAMODAL state.isOpenExtraModal: \", newState.isOpenExtraModal);\n            return newState;\n\n        case actions.TOGGLE_LOGINMODAL:\n            newState.isOpenLoginModal = !state.isOpenLoginModal;\n            // console.log(\"new TOGGLE_LOGINMODAL state.isOpenLoginModal: \", newState.isOpenLoginModal);\n            return newState;\n\n        case actions.TOGGLE_REGISTERMODAL:\n            newState.isOpenRegisterModal = !state.isOpenRegisterModal;\n            // console.log(\"new TOGGLE_REGISTERMODAL state.isOpenRegisterModal: \", newState.isOpenRegisterModal);\n            return newState;\n\n        case actions.SAVES_CAMPGROUNDS:\n            newState.campGrounds = action.campGrounds;\n            return newState;\n\n        case actions.DELETES_CAMPGROUNDS:\n            newState.campGrounds.splice(action.index, 1);\n            // newState.campGrounds = action.campGrounds;\n            return newState;\n        default:\n            return state;\n    }\n} ","import { createStore } from 'redux';\nimport { todoReducer } from './reducer';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\n\nexport default createStore(todoReducer, composeWithDevTools())","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","//@ts-check\n/**@module \n * @requires hapi/joi\n*/\nconst Joi = require('@hapi/joi');\n\n\n// nameValidation \n/**@namespace nameValidation */\nconst nameValidation = data => {\n    const schema = Joi.object({\n        name: Joi.string().min(8).required().trim()\n\n    });\n    return schema.validate(data);\n}\n\n/**@namespace emaileValidation */\n// emailValidation   THIS ONLY ACCEPTS .com and .net EXTENSIONS NEED TO FIND SOLUTION AND FIX validation.js on Server side\nconst emailValidation = data => {\n    const schema = Joi.object({\n        email: Joi.string().email({ minDomainSegments: 2, tlds: { allow: [\"com\", \"net\", \"*\"] } }).min(8).required().trim()\n\n    });\n    return schema.validate(data);\n}\n\n\n// passwordValidation    this extension did not work  .pattern(new RegExp('^[a-zA-Z0-9]{3,30}$'))\n// .pattern testing .pattern('^[a-zA-Z0-9]{3,30}$')\n/**@namespace passwordValidation */\nconst passwordValidation = data => {\n    const schema = Joi.object({\n        password: Joi.string().min(8).required().trim().pattern(new RegExp('^[a-zA-Z0-9]{3,30}$'))\n\n    });\n    return schema.validate(data);\n}\n\nmodule.exports.nameValidation = nameValidation;\nmodule.exports.emailValidation = emailValidation;\nmodule.exports.passwordValidation = passwordValidation;\n\n"],"sourceRoot":""}